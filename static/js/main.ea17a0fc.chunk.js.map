{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","translation","setTranslation","widthOfAllImages","length","stepWidth","frameWidth","className","style","maxWidth","transform","transition","map","image","index","width","src","alt","type","onClick","disabled","Math","abs","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","htmlFor","value","onChange","event","target","id","name","ReactDOM","render","document","getElementById"],"mappings":"mMAyEeA,EA9DmB,SAAC,GAM5B,IALLC,EAKI,EALJA,OAKI,IAJJC,YAII,MAJG,EAIH,MAHJC,iBAGI,MAHQ,EAGR,MAFJC,iBAEI,MAFQ,IAER,MADJC,yBACI,MADgB,IAChB,EACJ,EAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAmBL,EAAYH,EAAOS,OACtCC,EAAYP,EAAYF,EACxBU,EAAaR,EAAYD,EAkB/B,OACE,sBAAKU,UAAU,WAAWC,MAAO,CAAEC,SAAS,GAAD,OAAKZ,EAAYC,EAAjB,OAA3C,UACE,oBACES,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBT,EAAhB,OACTQ,SAAS,GAAD,OAAKN,EAAL,MACRQ,WAAW,aAAD,OAAeZ,EAAf,OALd,SAQGJ,EAAOiB,KAAI,SAACC,EAAOC,GAAR,OACV,6BACE,qBAAKN,MAAO,CAAEO,MAAM,GAAD,OAAKjB,EAAL,OAAsBkB,IAAKH,EAAOI,IAAG,UAAKH,EAAQ,MADvE,UAAYA,EAAQ,SAMxB,sBAAKP,UAAU,oBAAf,UACE,wBAAQW,KAAK,SAASC,QA1BT,WAEfjB,EADED,EAAcI,GAAa,EACdJ,EAAcI,EAEd,IAsB8Be,SAA0B,IAAhBnB,EAArD,SACG,QAEH,wBACE,UAAQ,OACRiB,KAAK,SACLC,QAxCW,WACbE,KAAKC,IAAIrB,GAAeI,GAAaF,EAAmBG,EAC1DJ,EAAeD,EAAcI,GAE7BH,EAAeI,EAAaH,IAqCxBiB,SAAUnB,IAAgBK,EAAaH,EAJzC,SAMG,eCSIoB,MAvEf,WACE,IAAM5B,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGF,EAAkCK,mBAAS,KAA3C,mBAAOF,EAAP,KAAkB0B,EAAlB,KACA,EAAkCxB,mBAAS,GAA3C,mBAAOH,EAAP,KAAkB4B,EAAlB,KACA,EAAwBzB,mBAAS,GAAjC,mBAAOJ,EAAP,KAAa8B,EAAb,KACA,EAAkD1B,mBAAS,KAA3D,mBAAOD,EAAP,KAA0B4B,EAA1B,KAEA,OACE,sBAAKpB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCZ,EAAOS,OAA1C,aAEA,uBAAOwB,QAAQ,SAAf,wBACA,uBACEC,MAAO/B,EACPgC,SAAU,SAAAC,GAAK,OAAIP,GAAcO,EAAMC,OAAOH,QAC9CX,KAAK,OACLe,GAAG,SACHC,KAAK,WAGP,uBAAON,QAAQ,UAAf,wBACA,uBACEC,MAAOhC,EACPiC,SAAU,SAAAC,GAAK,OAAIN,GAAcM,EAAMC,OAAOH,QAC9CX,KAAK,OACLe,GAAG,UACHC,KAAK,YAGP,uBAAON,QAAQ,SAAf,kBACA,uBACEC,MAAOjC,EACPkC,SAAU,SAAAC,GAAK,OAAIL,GAASK,EAAMC,OAAOH,QACzCX,KAAK,OACLe,GAAG,SACHC,KAAK,WAGP,uBAAON,QAAQ,cAAf,gCACA,uBACEC,MAAO9B,EACP+B,SAAU,SAAAC,GAAK,OAAIJ,GAAsBI,EAAMC,OAAOH,QACtDX,KAAK,OACLe,GAAG,cACHC,KAAK,gBAGP,cAAC,EAAD,CACEvC,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,QClE3BoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.ea17a0fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n}) => {\n  const [translation, setTranslation] = useState(0);\n  const widthOfAllImages = itemWidth * images.length;\n  const stepWidth = itemWidth * step;\n  const frameWidth = itemWidth * frameSize;\n\n  const handleNext = () => {\n    if (Math.abs(translation) + stepWidth <= widthOfAllImages - frameWidth) {\n      setTranslation(translation - stepWidth);\n    } else {\n      setTranslation(frameWidth - widthOfAllImages);\n    }\n  };\n\n  const handlePrev = () => {\n    if (translation + stepWidth <= 0) {\n      setTranslation(translation + stepWidth);\n    } else {\n      setTranslation(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ maxWidth: `${frameSize * itemWidth}px` }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${translation}px)`,\n          maxWidth: `${widthOfAllImages}px`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={`${index + 1}`}>\n            <img style={{ width: `${itemWidth}px` }} src={image} alt={`${index + 1}`} />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button type=\"button\" onClick={handlePrev} disabled={translation === 0}>\n          {'<<<'}\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={handleNext}\n          disabled={translation === frameWidth - widthOfAllImages}\n        >\n          {'>>>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nfunction App() {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <label htmlFor=\"itemId\">Item width</label>\n      <input\n        value={itemWidth}\n        onChange={event => setItemWidth(+event.target.value)}\n        type=\"text\"\n        id=\"itemId\"\n        name=\"itemId\"\n      />\n\n      <label htmlFor=\"frameId\">Frame size</label>\n      <input\n        value={frameSize}\n        onChange={event => setFrameSize(+event.target.value)}\n        type=\"text\"\n        id=\"frameId\"\n        name=\"frameId\"\n      />\n\n      <label htmlFor=\"stepId\">Step</label>\n      <input\n        value={step}\n        onChange={event => setStep(+event.target.value)}\n        type=\"text\"\n        id=\"stepId\"\n        name=\"stepId\"\n      />\n\n      <label htmlFor=\"animationId\">Animation duration</label>\n      <input\n        value={animationDuration}\n        onChange={event => setAnimationDuration(+event.target.value)}\n        type=\"text\"\n        id=\"animationId\"\n        name=\"animationId\"\n      />\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}